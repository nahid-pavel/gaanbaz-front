// Generated by CoffeeScript 1.7.1
(function() {
  var Logs, Util, defaults, sticker_defaults, util, _;

  Util = require('./util');

  util = new Util();

  _ = require('underscore');

  defaults = {
    'identifier': null,
    'showDateTime': true,
    'filePath': false,
    'showIcons': true,
    'trace': null,
    'dateTimeFormat': 'UTC:h:MM:ss TT Z'
  };

  sticker_defaults = {
    'color': 'yellow',
    'align': 'center'
  };

  Logs = (function() {
    function Logs(options) {
      var methods, self;
      this.options = options;
      methods = {
        'log': {
          'success': function(message, options) {
            return self.outputLog('success', message, options);
          },
          'warn': function(message, options) {
            return self.outputLog('warn', message, options);
          },
          'error': function(message, options) {
            return self.outputLog('error', message, options);
          },
          'info': function(message, options) {
            return self.outputLog('info', message, options);
          }
        },
        'progress': {
          'start': function(message) {
            return util.startProgress('started at', message);
          },
          'stop': function() {
            return util.stopProgress();
          }
        },
        'highlight': {
          'start': function(message) {
            return util.startHighlight(message);
          },
          'end': function(message) {
            return util.endHighlight();
          }
        },
        'print': {
          'ol': function(steps) {
            return util.printList('ol', steps, 0);
          },
          'li': function(steps) {
            return util.printList('li', steps, 0);
          }
        },
        'sticker': {
          'note': function(message, rawMessage) {
            return util.stickerMessage(message, rawMessage);
          },
          'show': function(options) {
            var align, color;
            options = _.extend(sticker_defaults, options);
            align = options.align;
            color = options.color;
            return util.showSticker(align, color);
          }
        }
      };
      this.options = _.extend(defaults, options);
      self = this;
      _.each(methods, function(v, k) {
        return self[k] = v;
      });
    }

    Logs.prototype.outputLog = function(type, message, options) {
      var dateTimeFormat, filePath, icons, identifier, showDateTime, trace;
      if (!options || !options.trace) {
        this.options.trace = null;
      }
      options = _.extend(this.options, options);
      identifier = options.identifier || null;
      showDateTime = options.showDateTime || null;
      trace = options.trace || null;
      filePath = options.filePath || null;
      icons = options.showIcons || null;
      dateTimeFormat = options.dateTimeFormat;
      return util.logBuilder(type, message, identifier, showDateTime, trace, filePath, icons, dateTimeFormat);
    };

    return Logs;

  })();

  module.exports = Logs;

}).call(this);
